generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  number    String   @unique()
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String?
  number           String?
  password         String
  isNumberVerified Boolean @default(false)
  isEmailVerified  Boolean @default(false)

  // Logs
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // soft delete
  deletedAt DateTime?
  isDeleted Boolean   @default(false)

  Otp Otp[]

  Profile Profile[]
}

enum ProfileType {
  PUBLIC
  EMERGENCY
}

model Profile {
  id     String      @id @default(auto()) @map("_id") @db.ObjectId
  userId String      @db.ObjectId @unique()
  user   User        @relation(fields: [userId], references: [id])
  type   ProfileType @default(PUBLIC)

  motherName String?
  fatherName String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Contacts Contacts[]
}

model Contacts {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  profileId           String  @db.ObjectId
  profile             Profile @relation(fields: [profileId], references: [id])
  contactPersonName   String
  contactPersonNumber String
}

model Otp {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  otp    String
  expiry DateTime
  type   String
}
